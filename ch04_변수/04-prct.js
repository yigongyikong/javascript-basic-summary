/**
 * 변수 이름을 식별자(identifier)라고도 한다.
 * 식별자는 어떤 값을 구별해서 식별할 수 있는 고유한 이름을 말한다.
 * 식별자는 값이 아니라 메모리 주소를 기억하고 있다.
 * 즉, 식별자는 메모리 주소에 붙인 이름이라고 할 수 있다.
 * 
 * 식별자라는 용어는 변수 이름에만 국한해서 사용하지 않는다.
 * 예를 들어, 변수, 함수, 클래스 등의 이름은 모두 식별자다.
 * 즉, 메모리 상에 존재하는 어떤 값을 식별할 수 있는 이름은 모두 식별자라고 부른다.
 * 
 * 변수, 함수, 클래스 등의 이름과 같은 식별자는 네이밍 규칙을 준수해야 하며,
 *  선언(declaration)에 의해 자바스크립트 엔진에 식별자의 존재를 알린다.
 * 
 * 변수를 사용하려면 반드시 선언이 필요하다.
 * 변수를 선언할 때는 var, let, const 키워드를 사용한다.
 */

var score; // 변수 선언(변수 선언문)

/**
 * 키워드는 자바스크립트 코드를 해석하고 실행하는
 *  자바스크립트 엔진이 수행할 동작을 규정한 일종의 명령어다.
 * var 키워드를 만나면 자바스크립트 엔진은 뒤에 오는 변수 이름으로 새로운 변수를 선언한다.
 * 
 * 변수 이름을 비롯한 모든 식별자는 실행 컨텍스트에 등록된다.
 * 실행 컨텍스트(execution context)는 자바스크립트 엔진이 소스코드를 평가하고
 *  실행하기 위해 필요한 환경을 제공하고 코드의 실행 결과를 실제로 관리하는 영역이다.
 * 자바스크립트 엔진은 실행 컨텍스트를 통해 식별자와 스코프를 관리한다.
 * 
 * var 키워드를 사용한 변수 선언은 선언 단계와 초기화 단계가 동시에 진행된다.
 * 초기화 단계를 통해 위 예제의 score 변수에 암묵적으로 undefined를 할당해 초기화한다.
 * 
 * 따라서 var 키워드로 선언한 변수는 어떠한 값도 할당하지 않아도 undefined라는 값을 갖는다.
 */