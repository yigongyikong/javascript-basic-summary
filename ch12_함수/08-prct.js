/**
 * 이름이 있는 기명 함수 리터럴은 코드의 문맥에 따라 함수 선언문 또는 함수 리터럴 표현식으로
 *  해셕된다.
 * 함수 선언문과 함수 리터럴 표현식은 함수 객체를 생성한다는 점에서 동일하지만 호출에 차이가 있다.
 */

// 기명 함수 리터럴을 단독으로 사용하면 함수 선언문으로 해석된다.
// 함수 선언문에서는 함수 이름을 생략할 수 없다.
function foo() { console.log('foo'); }
foo(); // foo

// 함수 리터럴을 피연산자로 사용하면 함수 선언문이 아니라 함수 리터럴 표현식으로 해석된다.
// 함수 리터럴에서는 함수 이름을 생략할 수 있다.
(function bar() { console.log('bar'); });
bar(); // ReferenceError: bar is not defined

/**
 * 함수 선언문으로 생성된 foo는 호출할 수 있으나
 *  함수 리터럴 표현식으로 생성된 bar는 호출할 수 없다.
 * 함수 선언문으로 정의된 함수는 foo라는 이름으로 호출할 수 있었다.
 * foo는 자바스크립트 엔진이 암묵적으로 생성한 식별자다.
 * 자바스크립트 엔진은 함수 선언문을 해석해 함수 객체를 생성한다.
 * 
 * 따라서 자바스크립트 엔진은 생성된 함수를 호출하기 위해 함수 이름과 동일한 이름의 식별자를
 *  암묵적으로 생성하고, 거기에 함수 객체를 할당한다.
 */